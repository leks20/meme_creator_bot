#!/usr/bin/env python3
import os
import time
from datetime import datetime

import pytz
import requests
import telebot
from dotenv import load_dotenv
from telebot import types

import helper


def main():
    # –∏–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    token = os.getenv('telegram_token')
    path_img = os.getenv('path_img')

    bot = telebot.TeleBot(token, parse_mode='html')

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞
    @bot.message_handler(commands=['start'])
    def start(message):
        text = f'<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üôÇ</b> \
            \n–°–∫–∏–¥—ã–≤–∞–π —Ñ–æ—Ç–æ –∏ —è –ø—Ä–∏—à–ª—é –º–µ–º –≤ –æ—Ç–≤–µ—Ç!'
        bot.send_message(message.chat.id, text)

    @bot.message_handler(content_types=['photo'])
    def create_meme(message):
        try:
            # –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            # –∏ –¥–∞—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            user_id = message.from_user.id
            timestamp = message.date
            date = datetime.fromtimestamp(
                timestamp, pytz.timezone('Europe/Moscow')
                ).strftime('%Y-%m-%d_%H:%M')

            name = '{}_{}.jpg'.format(date, str(user_id))

            # –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º http-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¢–µ–ª–µ–≥—Ä–∞–º,
            # –ø–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
            file_info = bot.get_file(message.photo[-1].file_id)
            file = requests.get(
                'https://api.telegram.org/file/bot{0}/{1}'.format(
                    token, file_info.file_path
                )
            )
            with open(os.path.join(path_img, name), 'wb') as new_file:
                new_file.write(file.content)
        except Exception as e:
            print(e)
            bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...üòü')

        # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ –≤ –º–æ–¥—É–ª–µ helper
        helper.add_text(name)

        try:
            bot.send_message(
                message.chat.id, '<b>–ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–º–∞ –∑–∞–ø—É—â–µ–Ω...‚öôÔ∏è</b>'
            )
            time.sleep(2)
        except Exception as e:
            print(e)
            bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...üòü')

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≥–æ—Ç–æ–≤—ã–π –º–µ–º –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–¥–µ–ª–∞—Ç—å —Ä–µ–ø–æ—Å—Ç
        try:
            with open(os.path.join(path_img, name), 'rb') as photo:
                keyboard = types.InlineKeyboardMarkup()
                callback_button = types.InlineKeyboardButton(
                    '–°–¥–µ–ª–∞—Ç—å —Ä–µ–ø–æ—Å—Ç', callback_data="–†–µ–ø–æ—Å—Ç"
                )
                keyboard.add(callback_button)
                bot.send_photo(message.chat.id, photo, reply_markup=keyboard)
        except Exception as e:
            print(e)
            bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...üòü')

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–°–¥–µ–ª–∞—Ç—å —Ä–µ–ø–æ—Å—Ç",
    # —É–≤–µ–¥–æ–º–ª—è–µ–º, —á—Ç–æ –º–µ–º –ø–æ–ø–∞–¥–µ—Ç –≤ –æ–±—â–∏–π —á–∞—Ç –∏ –∂–¥–µ–º —Ä–µ—à–µ–Ω–∏—è (–î–∞/–ù–µ—Ç)
    @bot.callback_query_handler(func=lambda call: call.data == '–†–µ–ø–æ—Å—Ç')
    def callback_repost(call):
        try:
            if call.data == '–†–µ–ø–æ—Å—Ç':
                keyboard = types.InlineKeyboardMarkup()
                yes_btn = types.InlineKeyboardButton('–î–∞', callback_data="–î–∞")
                no_btn = types.InlineKeyboardButton('–ù–µ—Ç', callback_data="–ù–µ—Ç")
                keyboard.add(yes_btn, no_btn)
                bot.reply_to(
                    call.message,
                    '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–º –≤ –∫–∞–Ω–∞–ª @memes_chat?',
                    reply_markup=keyboard
                )
                bot.answer_callback_query(call.id, text="")
        except Exception as e:
            print(e)
            bot.send_message(call.from_user.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...üòü')

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞:
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–î–∞" - —Å–∫–∏–¥—ã–≤–∞–µ–º –º–µ–º –≤ –æ–±—â–∏–π —á–∞—Ç
    @bot.callback_query_handler(func=lambda call: call.data == '–î–∞')
    def callback_yes(call):
        try:
            bot.send_photo(
                '@memes_chat',
                call.message.reply_to_message.json['photo'][-1]['file_id']
            )
            time.sleep(2)
            bot.send_message(
                call.from_user.id,
                '–ì–æ—Ç–æ–≤–æ! –°–∫–∏–¥—ã–≤–∞–π —Ñ–æ—Ç–æ –∏ —è —Å–¥–µ–ª–∞—é –Ω–æ–≤—ã–π –º–µ–º!'
            )
            bot.answer_callback_query(call.id, text="")
        except Exception as e:
            print(e)
            bot.send_message(call.from_user.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...üòü')

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞:
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ù–µ—Ç" - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–¥–µ–ª–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –º–µ–º
    @bot.callback_query_handler(func=lambda call: call.data == '–ù–µ—Ç')
    def callback_no(call):
        try:
            bot.send_message(
                call.from_user.id,
                '–°–∫–∏–¥—ã–≤–∞–π —Ñ–æ—Ço - —è –ø—Ä–∏—à–ª—é –¥—Ä—É–≥–æ–π –º–µ–º!'
            )
            bot.answer_callback_query(call.id, text="")
        except Exception as e:
            print(e)
            bot.send_message(call.from_user.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...üòü')

    bot.polling(none_stop=True)


if __name__ == '__main__':
    main()
